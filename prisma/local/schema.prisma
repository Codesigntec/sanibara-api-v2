generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MatierePremiere {
  id          String              @id @default(cuid())
  designation String
  description String?
  numero      Int                 @default(autoincrement())
  uniteId     String              @map("unite_id")
  unite       Unite               @relation(fields: [uniteId], references: [id])
  ligneAchats LigneAchat[]
  archive     Boolean             @default(false)
  removed     Boolean             @default(false)
  createdAt   DateTime            @default(now()) @map("created_at")
  updatedAt   DateTime            @updatedAt @map("updated_at")

  @@map("matieres_premieres")
}

model LigneAchat {
  id             String                   @id @default(cuid())
  numero         Int                      @default(autoincrement())
  prixUnitaire   Float                    @map("prix_unitaire")
  quantite       Int
  quantiteLivre  Int?
  qt_Utilise     Int?
  references     String?                  @map("references")
  datePeremption DateTime?                @map("date_peremption")
  
  matiereId      String                   @map("matiere_id")
  matiere        MatierePremiere          @relation(fields: [matiereId], references: [id])

  achatId        String                   @map("achat_id")
  achat          Achat                    @relation(fields: [achatId], references: [id], onDelete: Cascade)

  magasinId      String                   @map("magasin_id")
  magasin        MagasinMatierePremiere   @relation(fields: [magasinId], references: [id])

  productionLigneAchat ProductionLigneAchat[]

  createdAt      DateTime                 @default(now()) @map("created_at")
  updatedAt      DateTime                 @updatedAt @map("updated_at")

  @@map("ligne_achats")
}

enum Etat {
  LIVREE
  EN_COURS
}

enum StatutAchat {
  ACHETER
  COMMANDE
}

model Achat {
  id             String        @id @default(cuid())
  numero         Int           @default(autoincrement())
  libelle        String
  reference      String?
  date           DateTime
  tva            Int           @default(0)

  statutAchat    StatutAchat   @default(ACHETER)
  etat           Etat          @default(LIVREE)

  fournisseurId  String?       @map("fournisseur_id")
  fournisseur    Fournisseur?  @relation(fields: [fournisseurId], references: [id])
 
  createdAt      DateTime      @default(now()) @map("created_at")
  updatedAt      DateTime      @updatedAt @map("updated_at")

  archive        Boolean       @default(false)
  removed        Boolean       @default(false)

  ligneAchats    LigneAchat[]
  couts          Cout[]
  paiements      Paiement[]

  @@map("achats")
}

model Cout {
  id         String   @id @default(cuid())
  libelle    String
  montant    Float
  motif      String?
  achatId    String   @map("achat_id")
  achat      Achat    @relation(fields: [achatId], references: [id], onDelete: Cascade)

  @@map("couts")
}

model Paiement {
  id         String   @id @default(cuid())
  montant    Float
  achatId    String   @map("achat_id")
  achat      Achat    @relation(fields: [achatId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("paiements")
}

model ProduitFini {
  id          String   @id @default(cuid())
  designation String
  description String?
  numero      Int      @default(autoincrement())

  uniteId     String   @map("unite_id")
  unite       Unite    @relation(fields: [uniteId], references: [id])

  stockProdFini StockProduiFini[]

  archive     Boolean  @default(false)
  removed     Boolean  @default(false)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("produits_finis")
}

model ProductionLigneAchat {
  id          String   @id @default(cuid())
  qt_Utilise  Int?

  ligneAchatId   String   @map("ligne_achat_id")
  ligneAchat    LigneAchat    @relation(fields: [ligneAchatId], references: [id])

  productionId   String   @map("production_id")
  productions    Productions    @relation(fields: [productionId], references: [id], onDelete: Cascade)

  createdAt   DateTime @default(now()) @map("created_at")
  
  @@map("production_ligne_achat")
}

model CoutProduction {
  id         String   @id @default(cuid())
  libelle    String
  montant    Float
  motif      String?
  prodId     String   @map("prod_id")
  production Productions    @relation(fields: [prodId], references: [id], onDelete: Cascade)

  @@map("couts_productions")
}

model Productions {
  id          String   @id @default(cuid())
  reference   String
  description String?
  coutTotalProduction Float
  beneficeDetails Float
  beneficeGros Float
  numero      Int      @default(autoincrement())
  dateDebut   DateTime
  dateFin     DateTime? 
  archive     Boolean  @default(false)
  removed     Boolean  @default(false)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  stockProdFini StockProduiFini[]
  coutProduction CoutProduction[]
  productionLigneAchat  ProductionLigneAchat[]

  @@map("productions")
}

model StockProduiFini {
  id             String   @id @default(cuid())
  reference      String
  numero         Int      @default(autoincrement())
  pu_gros        Float
  pu_detail      Float
  qt_produit     Int
  datePeremption DateTime?

  prodFiniId     String   @map("produit_fini_id")
  produitFini    ProduitFini    @relation(fields: [prodFiniId], references: [id])

  productionId   String   @map("produition__id")
  productions    Productions    @relation(fields: [productionId], references: [id], onDelete: Cascade)

  magasinId      String   @map("magasin_id")
  magasin        MagasinProduitFini    @relation(fields: [magasinId], references: [id])

  stockVente     StockVente[] 

  archive     Boolean  @default(false)
  removed     Boolean  @default(false)

  @@map("stock_produi_fini")
}

model Vente {
   
  id          String   @id @default(cuid())
  reference   String
  numero      Int      @default(autoincrement())
  dateVente   DateTime
  montant     Float
  tva         Float
  paye        Float
  reliquat    Float
  etat        Boolean  @default(true)
  
  stockVente  StockVente[]
  paiements   PaiementVente[] 

  clientId     String   @map("client_id")
  client       Client    @relation(fields: [clientId], references: [id])

  archive   Boolean  @default(false)
  removed   Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("ventes")
}

model PaiementVente {
  id         String   @id @default(cuid())
  montant    Float
  venteId    String   @map("achat_id")
  vente      Vente    @relation(fields: [venteId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("paiements_vente")
}

model Client {
  id        String   @id @default(cuid())
  numero    Int      @default(autoincrement())
  nom       String
  telephone String?
  email     String?
  adresse   String?
  societe   String?

  vente Vente[]

  archive   Boolean  @default(false)
  removed   Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("clients")
}


model StockVente {
  id                String           @id @default(cuid())
  quantiteVendue    Int
  stockProduiFiniId String           @map("stock_produi_fini_id")
  venteId           String           @map("vente_id")

  stockProduiFini   StockProduiFini  @relation(fields: [stockProduiFiniId], references: [id])
  vente             Vente            @relation(fields: [venteId], references: [id], onDelete: Cascade)

  @@map("stock_vente")
  @@unique([stockProduiFiniId, venteId])
}

model Fournisseur {
  id        String   @id @default(cuid())
  numero    Int      @default(autoincrement())
  nom       String
  telephone String?
  email     String?
  adresse   String?
  societe   String?
 
  archive   Boolean  @default(false)
  removed   Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  achats    Achat[]

  @@map("fournisseurs")
}

model Depense {
  id        String   @id @default(cuid())
  numero    Int      @default(autoincrement())
  motif     String
  montant   Float
  date      DateTime
  archive   Boolean  @default(false)
  removed   Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("depenses")
}

model Devise {
  id        String   @id @default(cuid())
  numero    Int      @default(autoincrement())
  libelle   String
  symbole   String
  active    Boolean  @default(false)
  archive   Boolean  @default(false)
  removed   Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("devises")
}

model MagasinProduitFini {
  id        String   @id @default(cuid())
  numero    Int      @default(autoincrement())
  nom       String
  adresse   String
  archive   Boolean  @default(false)
  removed   Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  accesUtilisateursProduitsFinis MagasinUtilisateurProduitFini[]
  stockProdFini StockProduiFini[]

  @@map("magasins_produits_finis")
}

model MagasinMatierePremiere {
  id        String   @id @default(cuid())
  numero    Int      @default(autoincrement())
  nom       String
  adresse   String
  archive   Boolean  @default(false)
  removed   Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  ligneAchats LigneAchat[]
  accesUtilisateursMatieresPremieres MagasinUtilisateurMatierePremiere[]

  @@map("magasins_matieres_premieres")
}

model Role {
  id        String   @id @default(cuid())
  numero    Int      @default(autoincrement())
  libelle   String
  archive   Boolean  @default(false)
  removed   Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  users    Utilisateur[]
  accesses Access[]

  @@map("roles")
}

model Access {
  id        String   @id @default(cuid())
  module    String
  read      Boolean  @default(false)
  write     Boolean  @default(false)
  remove    Boolean  @default(false)
  archive   Boolean  @default(false)
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    String   @map("role_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([module, roleId], map: "module_role_uniq")
  @@map("accesses")
}

model Unite {
  id        String   @id @default(cuid())
  libelle   String
  archive   Boolean  @default(false)
  removed   Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  matieresPremieres MatierePremiere[]
  produitsFini ProduitFini[]

  @@map("unites")
}

model Utilisateur {
  id               String   @id @default(cuid())
  numero           Int      @default(autoincrement())
  nom              String
  email            String   @unique
  password         String
  confirmationCode Int      @default(0)
  status           Boolean  @default(true)
  archive          Boolean  @default(false)
  removed          Boolean  @default(false)
  roleId           String   @map("role_id")
  role             Role     @relation(fields: [roleId], references: [id])
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")

  traces                        Trace[]
  accesMagasinsProduitsFinis    MagasinUtilisateurProduitFini[]
  accesMagasinsMatierePremieres MagasinUtilisateurMatierePremiere[]

  @@map("utilisateurs")
}

model MagasinUtilisateurProduitFini {
  id        String             @id @default(cuid())
  magasinId String             @map("magasin_id")
  magasin   MagasinProduitFini @relation(fields: [magasinId], references: [id])

  utilisateurId String      @map("utilisateur_id")
  utilisateur   Utilisateur @relation(fields: [utilisateurId], references: [id])
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")

  @@map("magasin_produit_fini_utilisateurs")
}

model MagasinUtilisateurMatierePremiere {
  id        String                 @id @default(cuid())
  magasinId String                 @map("magasin_id")
  magasin   MagasinMatierePremiere @relation(fields: [magasinId], references: [id])

  utilisateurId String      @map("utilisateur_id")
  utilisateur   Utilisateur @relation(fields: [utilisateurId], references: [id])
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")

  @@map("magasin_matiere_premiere_utilisateurs")
}

model Trace {
  id            String      @id @default(cuid())
  action        String
  description   String
  utilisateurId String      @map("utilisateur_id")
  utilisateur   Utilisateur @relation(fields: [utilisateurId], references: [id])
  createdAt     DateTime    @default(now()) @map("created_at")

  @@map("traces")
}

model Structure {
  id        String   @id @default(cuid())
  nom       String
  email     String
  telephone String
  adresse   String
  logo      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("structures")
}
