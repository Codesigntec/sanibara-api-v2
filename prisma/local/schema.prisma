generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MatierePremiere {
  id          String       @id @default(cuid())
  designation String
  description String?
  numero      Int          @default(autoincrement())
  uniteId     String       @map("unite_id")
  archive     Boolean      @default(false)
  removed     Boolean      @default(false)
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  ligneAchats LigneAchat[]
  unite       Unite        @relation(fields: [uniteId], references: [id])

  @@map("matieres_premieres")
}

model LigneAchat {
  id                   String                 @id @default(cuid())
  prixUnitaire         Float                  @map("prix_unitaire")
  quantite             Int
  datePeremption       DateTime?              @map("date_peremption")
  matiereId            String                 @map("matiere_id")
  achatId              String                 @map("achat_id")
  magasinId            String                 @map("magasin_id")
  createdAt            DateTime               @default(now()) @map("created_at")
  updatedAt            DateTime               @updatedAt @map("updated_at")
  numero               Int                    @default(autoincrement())
  quantiteLivre        Int?
  references           String?                @map("references")
  qt_Utilise           Int?
  archive              Boolean                @default(false)
  removed              Boolean                @default(false)
  achat                Achat                  @relation(fields: [achatId], references: [id], onDelete: Cascade)
  magasin              MagasinMatierePremiere @relation(fields: [magasinId], references: [id])
  matiere              MatierePremiere        @relation(fields: [matiereId], references: [id])
  productionLigneAchat ProductionLigneAchat[]

  @@map("ligne_achats")
}

model Achat {
  id            String       @id @default(cuid())
  numero        Int          @default(autoincrement())
  date          DateTime
  fournisseurId String?      @map("fournisseur_id")
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt @map("updated_at")
  archive       Boolean      @default(false)
  removed       Boolean      @default(false)
  etat          Etat         @default(LIVREE)
  libelle       String
  statutAchat   StatutAchat  @default(ACHETER)
  tva           Int          @default(0)
  reference     String?
  fournisseur   Fournisseur? @relation(fields: [fournisseurId], references: [id])
  couts         Cout[]
  ligneAchats   LigneAchat[]
  paiements     Paiement[]

  @@map("achats")
}

model Cout {
  id      String  @id @default(cuid())
  libelle String
  montant Float
  motif   String?
  achatId String  @map("achat_id")
  achat   Achat   @relation(fields: [achatId], references: [id], onDelete: Cascade)

  @@map("couts")
}

model Paiement {
  id        String   @id @default(cuid())
  montant   Float
  achatId   String   @map("achat_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  achat     Achat    @relation(fields: [achatId], references: [id], onDelete: Cascade)

  @@map("paiements")
}

model ProduitFini {
  id            String            @id @default(cuid())
  designation   String
  description   String?
  numero        Int               @default(autoincrement())
  uniteId       String            @map("unite_id")
  archive       Boolean           @default(false)
  removed       Boolean           @default(false)
  createdAt     DateTime          @default(now()) @map("created_at")
  updatedAt     DateTime          @updatedAt @map("updated_at")
  unite         Unite             @relation(fields: [uniteId], references: [id])
  stockProdFini StockProduiFini[]

  @@map("produits_finis")
}

model ProductionLigneAchat {
  id           String      @id @default(cuid())
  ligneAchatId String      @map("ligne_achat_id")
  productionId String      @map("production_id")
  createdAt    DateTime    @default(now()) @map("created_at")
  qt_Utilise   Int?
  ligneAchat   LigneAchat  @relation(fields: [ligneAchatId], references: [id], onDelete: Cascade)
  productions  Productions @relation(fields: [productionId], references: [id], onDelete: Cascade)

  @@map("production_ligne_achat")
}

model CoutProduction {
  id         String      @id @default(cuid())
  libelle    String
  montant    Float
  motif      String?
  prodId     String      @map("prod_id")
  production Productions @relation(fields: [prodId], references: [id], onDelete: Cascade)

  @@map("couts_productions")
}

model Productions {
  id                   String                 @id @default(cuid())
  reference            String
  numero               Int                    @default(autoincrement())
  dateDebut            DateTime
  dateFin              DateTime?
  archive              Boolean                @default(false)
  removed              Boolean                @default(false)
  createdAt            DateTime               @default(now()) @map("created_at")
  updatedAt            DateTime               @updatedAt @map("updated_at")
  description          String?
  beneficeGros         Float
  coutTotalProduction  Float
  beneficeDetails      Float
  coutProduction       CoutProduction[]
  productionLigneAchat ProductionLigneAchat[]
  stockProdFini        StockProduiFini[]

  @@map("productions")
}

model StockProduiFini {
  id             String             @id @default(cuid())
  reference      String
  numero         Int                @default(autoincrement())
  pu_gros        Float
  pu_detail      Float
  qt_produit     Int
  prodFiniId     String             @map("produit_fini_id")
  productionId   String             @map("produition__id")
  magasinId      String             @map("magasin_id")
  archive        Boolean            @default(false)
  removed        Boolean            @default(false)
  datePeremption DateTime?
  magasin        MagasinProduitFini @relation(fields: [magasinId], references: [id])
  produitFini    ProduitFini        @relation(fields: [prodFiniId], references: [id])
  productions    Productions        @relation(fields: [productionId], references: [id], onDelete: Cascade)
  stockVente     StockVente[]

  @@map("stock_produi_fini")
}

model Vente {
  id         String          @id @default(cuid())
  reference  String
  numero     Int             @default(autoincrement())
  dateVente  DateTime
  montant    Float
  tva        Float
  clientId   String?         @map("client_id")
  archive    Boolean         @default(false)
  removed    Boolean         @default(false)
  createdAt  DateTime        @default(now()) @map("created_at")
  updatedAt  DateTime        @updatedAt @map("updated_at")
  reliquat   Float
  etat       Boolean         @default(true)
  paiements  PaiementVente[]
  stockVente StockVente[]
  client     Client?         @relation(fields: [clientId], references: [id])

  @@map("ventes")
}

model PaiementVente {
  id        String   @id @default(cuid())
  montant   Float
  venteId   String   @map("achat_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  vente     Vente    @relation(fields: [venteId], references: [id], onDelete: Cascade)

  @@map("paiements_vente")
}

model Client {
  id        String   @id @default(cuid())
  numero    Int      @default(autoincrement())
  nom       String
  telephone String?
  email     String?
  adresse   String?
  societe   String?
  archive   Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  removed   Boolean  @default(false)
  vente     Vente[]

  @@map("clients")
}

model StockVente {
  id                String          @id @default(cuid())
  quantiteVendue    Int
  stockProduiFiniId String          @map("stock_produi_fini_id")
  venteId           String          @map("vente_id")
  prix_unitaire     Float           @default(0)
  archive           Boolean         @default(false)
  removed           Boolean         @default(false)
  quantiteDevis     Int
  stockProduiFini   StockProduiFini @relation(fields: [stockProduiFiniId], references: [id])
  vente             Vente           @relation(fields: [venteId], references: [id], onDelete: Cascade)

  @@map("stock_vente")
}

model Fournisseur {
  id        String   @id @default(cuid())
  numero    Int      @default(autoincrement())
  nom       String
  telephone String?
  email     String?
  adresse   String?
  societe   String?
  archive   Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  removed   Boolean  @default(false)
  achats    Achat[]

  @@map("fournisseurs")
}

model Depense {
  id        String   @id @default(cuid())
  numero    Int      @default(autoincrement())
  motif     String
  montant   Float
  date      DateTime
  archive   Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  removed   Boolean  @default(false)

  @@map("depenses")
}

model Devise {
  id        String   @id @default(cuid())
  numero    Int      @default(autoincrement())
  libelle   String
  active    Boolean  @default(false)
  archive   Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  removed   Boolean  @default(false)
  symbole   String

  @@map("devises")
}

model MagasinProduitFini {
  id                             String                          @id @default(cuid())
  nom                            String
  adresse                        String
  archive                        Boolean                         @default(false)
  removed                        Boolean                         @default(false)
  createdAt                      DateTime                        @default(now()) @map("created_at")
  updatedAt                      DateTime                        @updatedAt @map("updated_at")
  numero                         Int                             @default(autoincrement())
  accesUtilisateursProduitsFinis MagasinUtilisateurProduitFini[]
  stockProdFini                  StockProduiFini[]

  @@map("magasins_produits_finis")
}

model MagasinMatierePremiere {
  id                                 String                              @id @default(cuid())
  nom                                String
  adresse                            String
  archive                            Boolean                             @default(false)
  removed                            Boolean                             @default(false)
  createdAt                          DateTime                            @default(now()) @map("created_at")
  updatedAt                          DateTime                            @updatedAt @map("updated_at")
  numero                             Int                                 @default(autoincrement())
  ligneAchats                        LigneAchat[]
  accesUtilisateursMatieresPremieres MagasinUtilisateurMatierePremiere[]

  @@map("magasins_matieres_premieres")
}

model Role {
  id        String        @id @default(cuid())
  numero    Int           @default(autoincrement())
  libelle   String
  createdAt DateTime      @default(now()) @map("created_at")
  updatedAt DateTime      @updatedAt @map("updated_at")
  removed   Boolean       @default(false)
  archive   Boolean       @default(false)
  accesses  Access[]
  users     Utilisateur[]

  @@map("roles")
}

model Access {
  id        String   @id @default(cuid())
  module    String
  read      Boolean  @default(false)
  write     Boolean  @default(false)
  remove    Boolean  @default(false)
  archive   Boolean  @default(false)
  roleId    String   @map("role_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  role      Role     @relation(fields: [roleId], references: [id])

  @@unique([module, roleId], map: "module_role_uniq")
  @@map("accesses")
}

model Unite {
  id                String            @id @default(cuid())
  libelle           String
  archive           Boolean           @default(false)
  createdAt         DateTime          @default(now()) @map("created_at")
  updatedAt         DateTime          @updatedAt @map("updated_at")
  removed           Boolean           @default(false)
  symbole           String
  matieresPremieres MatierePremiere[]
  produitsFini      ProduitFini[]

  @@map("unites")
}

model Utilisateur {
  id                            String                              @id @default(cuid())
  numero                        Int                                 @default(autoincrement())
  nom                           String
  email                         String                              @unique
  password                      String
  confirmationCode              Int                                 @default(0)
  roleId                        String                              @map("role_id")
  createdAt                     DateTime                            @default(now()) @map("created_at")
  updatedAt                     DateTime                            @updatedAt @map("updated_at")
  status                        Boolean                             @default(true)
  archive                       Boolean                             @default(false)
  removed                       Boolean                             @default(false)
  accesMagasinsMatierePremieres MagasinUtilisateurMatierePremiere[]
  accesMagasinsProduitsFinis    MagasinUtilisateurProduitFini[]
  traces                        Trace[]
  role                          Role                                @relation(fields: [roleId], references: [id])

  @@map("utilisateurs")
}

model MagasinUtilisateurProduitFini {
  id            String             @id @default(cuid())
  magasinId     String             @map("magasin_id")
  utilisateurId String             @map("utilisateur_id")
  createdAt     DateTime           @default(now()) @map("created_at")
  updatedAt     DateTime           @updatedAt @map("updated_at")
  magasin       MagasinProduitFini @relation(fields: [magasinId], references: [id])
  utilisateur   Utilisateur        @relation(fields: [utilisateurId], references: [id])

  @@map("magasin_produit_fini_utilisateurs")
}

model MagasinUtilisateurMatierePremiere {
  id            String                 @id @default(cuid())
  magasinId     String                 @map("magasin_id")
  utilisateurId String                 @map("utilisateur_id")
  createdAt     DateTime               @default(now()) @map("created_at")
  updatedAt     DateTime               @updatedAt @map("updated_at")
  magasin       MagasinMatierePremiere @relation(fields: [magasinId], references: [id])
  utilisateur   Utilisateur            @relation(fields: [utilisateurId], references: [id])

  @@map("magasin_matiere_premiere_utilisateurs")
}

model Trace {
  id            String      @id @default(cuid())
  action        String
  description   String
  utilisateurId String      @map("utilisateur_id")
  createdAt     DateTime    @default(now()) @map("created_at")
  utilisateur   Utilisateur @relation(fields: [utilisateurId], references: [id])

  @@map("traces")
}

model Structure {
  id        String   @id @default(cuid())
  nom       String
  email     String
  telephone String
  adresse   String
  logo      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("structures")
}

model Notification {
  id        String   @id @default(cuid())
  message   String
  is_read   Boolean  @default(false)
  type      String?
  createdAt DateTime @default(now()) @map("created_at")
  idObject  String

  @@map("notifications")
}

enum Etat {
  LIVREE
  EN_COURS
}

enum StatutAchat {
  ACHETER
  COMMANDE
}
